name: Build and Deploy

on: push
#  workflow_dispatch: {}

env:
  applicationfolder: spring-boot-hello-world-example
  AWS_REGION: us-east-1
  S3BUCKET: stack-deploy-webappdeploymentbucket-iczhqgtfjoaa


jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: chmod
        run: chmod -R +x ./.github

      - name: Build and Package Maven
        id: package
        working-directory: ${{ env.applicationfolder }}
        run: $GITHUB_WORKSPACE/.github/scripts/build.sh

      - name: Upload Artifact to s3
        working-directory: ${{ env.applicationfolder }}/target
        run: aws s3 cp *.war s3://${{ env.S3BUCKET }}/

      - name: Prepare Deployment Package
        run: |
          mkdir -p deployment-package
          cp appspec.yml deployment-package/
          cp -r aws/scripts deployment-package/
          cp ${{ env.applicationfolder }}/target/*.war deployment-package/
          cd deployment-package
          zip -r ../deployment-package.zip .

      - name: Upload Deployment Bundle to S3
        run: aws s3 cp deployment-package.zip s3://${{ env.S3BUCKET }}/
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: ${{ env.AWS_REGION }}
    - run: |
        echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
        commit_hash=`git rev-parse HEAD`
        aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --s3-location bucket=${{ env.S3BUCKET }},key=deployment-package.zip,bundleType=zip --ignore-application-stop-failures